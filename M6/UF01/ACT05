/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package m6;

/**
 *
 * @author Raul
 */
import java.io.File;
import org.xml.sax.SAXException;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.xml.sax.SAXException;
import java.io.IOException;
import java.util.Scanner;
 import javax.xml.transform.TransformerException;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.Transformer;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.transform.stream.StreamResult;
import org.w3c.dom.NodeList;
import static sun.net.util.IPAddressUtil.scan;

public class act5Nodos {
       
        public static Document doc;
        public static Scanner sc = new Scanner(System.in);
        public static Element nodoArrel;
    
        
      public static void main(String args[]) throws ParserConfigurationException, SAXException, IOException,TransformerException {   
        
        File file = new File("C:\\Users\\Raul\\Desktop\\coches.xml");
  

        DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();
        DocumentBuilder dBuilder = dbFactory.newDocumentBuilder();
        Document doc = dBuilder.parse(file);
        nodoArrel = doc.getDocumentElement();
     
        
        asignaId(nodoArrel);
        
        opcions();
        }
        public static void opcions() throws TransformerException {
        int chivato = 0;
        int opcio = 0;
        
      
        
        while(chivato!=1){
            
            
          System.out.println("1-Mostar XML");
          System.out.println("2-Crear node");
          System.out.println("3-Eliminar node");
          System.out.println("4-Guardar canvis");
          System.out.println("5-Terminar ");
         
          
         opcio=sc.nextInt();
          switch(opcio){
          
              case 1:
                System.out.println(nodoArrel);
                NodeList nList = doc.getElementsByTagName("coche");

                        for (int i = 0; i < nList.getLength(); i++) {
                        Node node = nList.item(i);

                               if (node.getNodeType() == Node.ELEMENT_NODE) {
                                   Element eElement = (Element) node;

                               if(eElement.hasChildNodes()) {
                                   NodeList nl = node.getChildNodes();
                                          for(int j=0; j<nl.getLength(); j++) {
                                           Node nd = nl.item(j);
                                           System.out.print(nd.getTextContent());
                                                                              }
                                                             }
                                                                               }
                      }
              break;
              case 2:
                  crearNodo();                  
              break;
                  
              case 3:   
                  eliminarNodo();
              break;    
                  
              case 4:
                  guardarCanvis();
              break;    
                  
              case 5:
                  chivato=1;
               break;   
                  
                  
          }
          
            
                }

     }

    public static void crearNodo() {
        int chi = 0;
        
           while(chi!=1){
               
               String id;
               String marca;
               String matricula;
               String precio;
               
               System.out.println("Introdueix l'id del coche");
               id = sc.next();
               System.out.println("marca:");
               marca = sc.next();
               System.out.println("matricula:");
               matricula = sc.next();
               System.out.println("precio:");
               precio = sc.next();
           
                Element elementMarca = doc.createElement("marca");
                elementMarca.appendChild(doc.createTextNode(marca));
                Element elementMatricula = doc.createElement("matricula");
                elementMatricula.appendChild(doc.createTextNode(matricula));
                Element elementPrecio = doc.createElement("precio");
                elementPrecio.appendChild(doc.createTextNode(precio));
                
                Element element = doc.createElement("coche");
                
                nodoArrel.appendChild(element);
                
                 element.setAttribute("id", id);
                 element.setIdAttribute("id", true);
                 element.appendChild(elementMarca);
                 element.appendChild(elementMatricula);
                 element.appendChild(elementPrecio);
                 
               chi=1;
           
           }
    }

    public static void eliminarNodo() {
       int chi = 0 ;
       String id;
       String marca;
       String matricula;
       String precio;
       
       
       while (chi!=1){
       
       System.out.println("Introduiex l'id del coche: ");
       id = sc.next();
       Element element = doc.getElementById(id);
       
       nodoArrel.removeChild(element);
       
       
       
       
       }
    }

    public static void asignaId(Node element) {
            if (element.hasAttributes()) {
            for (int i = 0; i < element.getAttributes().getLength(); i++)
            {
            if (element.getAttributes().item(i).getNodeName().equals("id")){
            ((Element) element).setIdAttribute("id", true);
             }
                 }   
                          }

            for (int i = 0; i < element.getChildNodes().getLength(); i++) {
            if (element.getChildNodes().item(i).hasChildNodes()) {
            asignaId(element.getChildNodes().item(i));
 }

 }

 }

    private static void guardarCanvis()throws TransformerException{
   
   Transformer tran = TransformerFactory.newInstance().newTransformer();
   StreamResult resultado = new StreamResult(new File("C:\\Users\\Raul\\Desktop\\coches.xml"));
    DOMSource source = new DOMSource(doc);
        tran.transform(source, resultado);
            System.exit(0);
    }
    
}
